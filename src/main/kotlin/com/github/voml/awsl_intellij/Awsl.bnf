{
    parserClass = "com.github.voml.awsl_intellij.language.parser.AwslParser"
    parserUtilClass = "com.github.voml.awsl_intellij.psi.AwslParserUtil"

    extends = "com.intellij.extapi.psi.ASTWrapperPsiElement"

    psiClassPrefix = "Awsl"
    psiImplClassSuffix = "Impl"
    psiPackage = "com.github.voml.awsl_intellij.language.psi"
    psiImplPackage = "com.github.voml.awsl_intellij.language.psi.impl"

    elementTypeHolderClass = "com.github.voml.awsl_intellij.language.psi.AwslTypes"
    elementTypeClass = "com.github.voml.awsl_intellij.psi.AwslElementType"
    tokenTypeClass = "com.github.voml.awsl_intellij.psi.AwslTokenType"

    psiImplUtilClass = "com.github.voml.awsl_intellij.language.psi.impl.AwslPsiImplUtil"
    // Lexer Token from JFlex
    // Here only write names
    tokens = [
        WHITE_SPACE = "White Space";
        // 注释
        COMMENT_LINE="Comment Line";
        COMMENT_BLOCK="Comment Block";
        COMMENT_HTML="Comment in HTML";
        COMMENT_DOCUMENT="Comment Document";
        IN="Keyword in";
        FOR="Keyword for";
        WHILE="Keyword while";
        COMMA=","
        EQ="="
        SEMICOLON=";"
        PARENTHESIS_L="("
        PARENTHESIS_R=")"
        BRACKET_L="["
        BRACKET_R="]"
        BRACE_L="{"
        BRACE_R="}"
        HTML_BEGIN_TOKEN="HTML_BEGIN_TOKEN"
        HTML_END_TOKEN="HTML_END_TOKEN"
        BAD_CHARACTER="BAD_CHARACTER"
        SYMBOL="Symbol"
    ]
}

Awsl ::= statement*;

private statement ::=
    COMMENT_DOCUMENT
  | SYMBOL
  | STRING
 // | html_element
 // | ignore
  ;

html_element ::= HTML_BEGIN_TOKEN SYMBOL HTML_END_TOKEN;
private ignore ::= WHITE_SPACE | COMMENT_LINE | COMMENT_BLOCK;
// parenthesis ( )
private meta parenthesis ::= PARENTHESIS_L <<param>> PARENTHESIS_R;
// bracket [ ]
meta bracket_block ::= BRACKET_L [<<item>> (<<sp>> <<item>>)* [<<sp>>]] BRACKET_R;
// brace { }
meta brace_block ::= BRACE_L (<<item>>|<<sp>>)* BRACE_R;

